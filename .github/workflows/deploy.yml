name: Build, Push to ECR, and Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Build, tag, and push Docker image to ECR
        id: build-image
        run: |
          # Replace these values with your repository and image details
          REPO_NAME=my-app-repo
          IMAGE_TAG=latest
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ECR_URI=$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_NAME

          # Build and push the Docker image
          docker build -t $ECR_URI:$IMAGE_TAG .
          docker push $ECR_URI:$IMAGE_TAG

          # Save image URI for use in ECS update
          echo "IMAGE_URI=$ECR_URI:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Update ECS task definition and deploy to ECS
        run: |
          # Replace these values with your ECS and task definition details
          CLUSTER_NAME=my-ecs-cluster
          SERVICE_NAME=my-ecs-service
          TASK_DEFINITION_NAME=my-task
          CONTAINER_NAME=my-container

          # Get the current task definition JSON
          CURRENT_TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition $TASK_DEFINITION_NAME)
          CURRENT_TASK_DEFINITION_JSON=$(echo $CURRENT_TASK_DEFINITION | jq '.taskDefinition')

          # Create a new task definition with the updated image URI
          NEW_TASK_DEF=$(echo $CURRENT_TASK_DEFINITION_JSON | jq --arg IMAGE_URI "$IMAGE_URI" '.containerDefinitions[0].image = $IMAGE_URI')

          # Register the new task definition
          NEW_TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json "$NEW_TASK_DEF" --query 'taskDefinition.taskDefinitionArn' --output text)

          # Update the ECS service with the new task definition
          aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --task-definition $NEW_TASK_DEF_ARN

    # Optionally, you can add a notification or Slack alert step after deployment is complete.
